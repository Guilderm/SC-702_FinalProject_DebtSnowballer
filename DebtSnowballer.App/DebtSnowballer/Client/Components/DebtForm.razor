@using DebtSnowballer.Shared.DTOs
@using Microsoft.AspNetCore.Components.Forms

<div class="modal" tabindex="-1" style="display: @(Visible ? "block" : "none");">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@(DebtItem.Id == 0 ? "Add Loan" : "Edit Loan")</h5>
                <button type="button" class="btn-close" ></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@DebtItem" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <InputNumber id="principal" @bind-Value="DebtItem.RemainingPrincipal" placeholder="Principal" />
                    <InputNumber id="interestRate" @bind-Value="DebtItem.InterestRate" placeholder="Interest Rate" />
                    <InputNumber id="fees" @bind-Value="DebtItem.Fees" placeholder="Fees" />
                    <InputNumber id="monthlyPayment" @bind-Value="DebtItem.MonthlyPayment" placeholder="Monthly Payment" />
                    <InputNumber id="remainingTerm" @bind-Value="DebtItem.RemainingTerm" placeholder="Remaining Term" />
                    <InputText id="currency" @bind-Value="DebtItem.CurrencyCode" placeholder="Currency" />

                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public DebtDto DebtItem { get; set; }

    [Parameter]
    public EventCallback<DebtDto> OnSave { get; set; }

    [Parameter]
    public EventCallback CancelEdit { get; set; }

    [Parameter]
    public bool Visible { get; set; }

    private async Task HandleValidSubmit()
    {
        await OnSave.InvokeAsync(DebtItem);
    }
}
