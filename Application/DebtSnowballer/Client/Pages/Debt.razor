@page "/Debt"
@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.Services
@inject HttpClient HttpClient
@inject IConfiguration Configuration
@attribute [Authorize]

<h3>Manage Your Debt</h3>

@if (loanItems == null)
    {
    <p>
        <em>Loading...</em>
    </p>
    }

else
    {
    <table class="table">
        <thead>
            <tr>
                <th>Loan Nickname</th>
                <th>Principal</th>
                <th>Interest Rate</th>
                <th>Fees</th>
                <th>Monthly Payment</th>
                <th>Remaining Term</th>
                <th>Currency ID</th>
                <th>Cardinal Order</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in loanItems)
                {
                <tr>
                    <td>@item.LoanNickName</td>
                    <td>@item.Principal</td>
                    <td>@item.InterestRate</td>
                    <td>@item.Fees</td>
                    <td>@item.MonthlyPayment</td>
                    <td>@item.RemainingTerm</td>
                    <td>@item.CurrencyID</td>
                    <td>@item.CardinalOrder</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => LoadLoanItem(item.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteLoanItem(item.Id)">Delete</button>
                    </td>
                </tr>
                }
        </tbody>
    </table>

    <button class="btn btn-success" @onclick="NewLoanItem">Add New Loan</button>

    @if (_selectedDebtItem != null)
        {
        <h3>@(_selectedDebtItem.Id == 0 ? "Add Loan" : "Edit Loan")</h3>

        <EditForm Model="_selectedDebtItem" OnValidSubmit="SaveLoanItem" @key="_selectedDebtItem">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Your form fields go here -->

            <button type="submit" class="btn btn-success">@(_selectedDebtItem.Id == 0 ? "Add" : "Update")</button>
        </EditForm>
        }
    }

@code {
    private List<DebtDto> loanItems;
    private DebtDto _selectedDebtItem;
    private IGenericService<DebtDto> LoanService;

    protected override async Task OnInitializedAsync()
        {
        var fullUrl = Configuration["ApiEndpoint:Url"] + "Debt";
        LoanService = new GenericService<DebtDto>(HttpClient, fullUrl);
        await LoadLoanItems();
        }

    private async Task LoadLoanItems()
        {
        loanItems = await LoanService.GetItems();
        }

    private void NewLoanItem()
        {
        _selectedDebtItem = new DebtDto();
        }

    private async Task LoadLoanItem(int id)
        {
        _selectedDebtItem = await LoanService.GetItem(id);
        }

    private async Task SaveLoanItem()
        {
        if (_selectedDebtItem.Id == 0)
            {
            await LoanService.AddItem(_selectedDebtItem);
            }
        else
            {  
            await LoanService.UpdateItem(_selectedDebtItem);
            }

        _selectedDebtItem = null;

        await LoadLoanItems();
        }

    private async Task DeleteLoanItem(int id)
        {
        await LoanService.DeleteItem(id);
        await LoadLoanItems();
        }
}