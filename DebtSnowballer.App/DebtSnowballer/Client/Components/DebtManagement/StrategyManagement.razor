@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.ClientSideServices
@inject IMultiPurposeService MultiPurposeService


<h3>Choose your strategy</h3>

@if (_strategyTypes == null)
{
	<p>
		<em>Loading strategies...</em>
		<MudProgressLinear Color="Color.Primary" Striped="true" Size="Size.Large" Value="75" Class="my-7" />
	</p>
}
else
{
	<select @onchange="OnStrategyChange" value="@UserPreference">
		@foreach (DebtPayDownMethodDto strategyType in _strategyTypes)
		{
			<option value="@strategyType.Id">@strategyType.Name</option>
		}
	</select>
}

@code {

	private IList<DebtPayDownMethodDto> _strategyTypes;

	[Parameter]
	public UserPreferenceDto UserPreference { get; set; }

	[Parameter]
	public EventCallback<UserPreferenceDto> SaveUserPreference { get; set; }

	protected override async Task OnInitializedAsync()
	{
		_strategyTypes = await MultiPurposeService.GetAllStrategyTypes();
	}

	private async Task OnStrategyChange(ChangeEventArgs selectedStrategyId)
	{
		if (int.TryParse(selectedStrategyId.Value!.ToString(), out int parsedValue))
		{
			UserPreference.SelectedStrategy = parsedValue;
			await SaveUserPreference.InvokeAsync(UserPreference);
		}
	}

}