@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.ClientSideServices
@inject IMultiPurposeService MultiPurposeService


<h3>Choose your strategy</h3>

@if (_strategyTypes == null)
{
	<p>
		<em>Loading strategies...</em>
	</p>
}
else
{
	<select @onchange="OnStrategyChange" value="@UserStrategyType">
		@foreach (StrategyTypeDto strategyType in _strategyTypes)
		{
			<option value="@strategyType.Id">@strategyType.Name</option>
		}
	</select>
}

@code {

	private IList<StrategyTypeDto> _strategyTypes;

	[Parameter]
	public int UserStrategyType { get; set; }

	[Parameter]
	public EventCallback<int> UpdateSelectedStrategy { get; set; }

	protected override async Task OnInitializedAsync()
	{
		_strategyTypes = await MultiPurposeService.GetAllStrategyTypes();
	}

	private async Task OnStrategyChange(ChangeEventArgs selectedStrategyId)
	{
		if (int.TryParse(selectedStrategyId.Value.ToString(), out int parsedValue))
			await UpdateSelectedStrategy.InvokeAsync(parsedValue);
	}

}