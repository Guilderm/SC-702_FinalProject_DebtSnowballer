@page "/Debt"
@page "/DebtManagement"
@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.Services
@using DebtSnowballer.Client.Components.DebtManagement

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IDebtService DebtService
@inject IUserProfileService UserProfileService
@attribute [Authorize]

<PageTitle>Debt Management</PageTitle>

<h3>Create a strategy to become debt free</h3>

<BaseCurrency UserCurrency="@_currentBaseCurrency" UpdateBaseCurrency="UpdateBaseCurrency"/>

<DebtTable Debts="_debts" EditDebt="GetDebt" DeleteDebt="DeleteDebt" OnAddNewLoan="OnAddNewDebt"/>

<DebtForm Debt="_selectedDebt" OnSave="SaveDebt" OnCancel="CancelEdit"/>

<DebtSummary Debts="_debts"/>


@code {
	private List<DebtDto> _debts;
	private DebtDto _selectedDebt;
	private string _currentBaseCurrency;
	private UserProfileDto _userProfile;

	protected override async Task OnInitializedAsync()
	{
		AuthenticationState authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

		_userProfile = await UserProfileService.GetUserProfile(authState.User);
		_currentBaseCurrency = _userProfile.BaseCurrency;

		await LoadDebts();
	}

	private async Task LoadDebts()
	{
		_debts = (await DebtService.GetDebts()).ToList();
	}

	private async Task UpdateBaseCurrency(string selectedCurrency)
	{
		await UserProfileService.UpdateBaseCurrency(selectedCurrency);
		_currentBaseCurrency = selectedCurrency;
		_userProfile.BaseCurrency = selectedCurrency;
	}

	private void OnAddNewDebt()
	{
		_selectedDebt = new DebtDto();
	}

	private async Task GetDebt(int id)
	{
		_selectedDebt = await DebtService.GetDebtById(id);
	}

	private async Task DeleteDebt(int id)
	{
		await DebtService.DeleteDebt(id);
		await LoadDebts();
	}

	private async Task SaveDebt(DebtDto debtItem)
	{
		if (debtItem.Id == 0)
		{
			await DebtService.AddDebt(debtItem);
		}
		else
		{
			await DebtService.UpdateDebt(debtItem);
		}

		await LoadDebts();
		_selectedDebt = null;
	}

	private void CancelEdit()
	{
		_selectedDebt = null;
	}

}