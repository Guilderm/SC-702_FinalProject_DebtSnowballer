@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.ClientServices
@inject IDebtService DebtService

<h3>
	<br>
</h3>

<h3>List all your debts</h3>
<br>
<DebtTable Debts="DebtsInQuoteCurrency" GetCurrencySymbol="GetCurrencySymbol" OnEditDebt="EditDebt" OnDeleteDebt="DeleteDebt" AreActionsShown="true"/>

<button class="btn btn-success" @onclick="OnAddNewDebt">Add New Loan</button>

<h3>
	<br>
</h3>

<h3>Debts converted to base currency</h3>
<br>
<DebtTable Debts="DebtsInBaseCurrency" GetCurrencySymbol="GetCurrencySymbol" OnEditDebt="EditDebt" OnDeleteDebt="DeleteDebt" AreActionsShown="false"/>

<DebtForm Debt="@_selectedDebt" OnSave="SaveDebt" OnCancel="CancelEdit"/>

@code {
	private DebtDto _selectedDebt;

	[Parameter]
	public List<DebtDto> DebtsInQuoteCurrency { get; set; }

	[Parameter]
	public List<DebtDto> DebtsInBaseCurrency { get; set; }

	[Parameter]
	public Func<string, string> GetCurrencySymbol { get; set; }

	[Parameter]
	public Func<Task> LoadDebtsInQuoteCurrency { get; set; }

	[Parameter]
	public Func<Task> LoadDebtsInBaseCurrency { get; set; }

	private void OnAddNewDebt()
	{
		_selectedDebt = new DebtDto();
	}

	private async Task EditDebt(int id)
	{
		_selectedDebt = await DebtService.GetDebtById(id);
	}

	private async Task DeleteDebt(int id)
	{
		await DebtService.DeleteDebt(id);
		await LoadDebtsInQuoteCurrency();
		await LoadDebtsInBaseCurrency();
	}

	private async Task SaveDebt(DebtDto debtItem)
	{
		if (debtItem.Id == 0)
		{
			await DebtService.AddDebt(debtItem);
		}
		else
		{
			await DebtService.UpdateDebt(debtItem);
		}

		await LoadDebtsInQuoteCurrency();
		await LoadDebtsInBaseCurrency();
		_selectedDebt = null;
	}

	private void CancelEdit()
	{
		_selectedDebt = null;
	}

}