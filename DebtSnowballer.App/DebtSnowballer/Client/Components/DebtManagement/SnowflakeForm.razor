@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Shared.Currency
<br/>
<br/>
@if (Snowflake != null)
{
	<div class="modal" style="display: block">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">@(Snowflake.Id == 0 ? "Add A Snowflake" : "Edit: ") @Snowflake.Name</h5>
					<button type="button" class="btn-close" @onclick="OnCancel"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="@Snowflake" OnValidSubmit="SubmitSnowflakeForm">
						<DataAnnotationsValidator/>
						<ValidationSummary/>

						<div class="form-group">
							<label for="NickName">Snowflake NickName</label>
							<InputText id="NickName" @bind-Value="Snowflake.Name" class="form-control" placeholder="Snowflake NickName"/>
						</div>

						<div class="form-group">
							<label for="FrequencyInMonths">Frequency In Months</label>
							<InputNumber id="FrequencyInMonths" @bind-Value="Snowflake.FrequencyInMonths" class="form-control" placeholder="Frequency In Months"/>
						</div>

						<div class="form-group">
							<label for="Amount">Amount</label>
							<InputNumber id="Amount" @bind-Value="Snowflake.Amount" class="form-control" placeholder="Amount"/>
						</div>

						<div class="form-group">
							<label for="StartingAt">Starting At</label>
							<InputDate id="StartingAt" @bind-Value="Snowflake.StartingAt" class="form-control" placeholder="Starting At"/>
						</div>

						<div class="form-group">
							<label for="EndingAt">Ending At</label>
							<InputDate id="EndingAt" @bind-Value="Snowflake.EndingAt" class="form-control" placeholder="Ending At"/>
						</div>

						<div class="form-group">
							<label for="currency">Currency</label>
							<InputSelect id="currency" @bind-Value="Snowflake.CurrencyCode" class="form-control">
								@foreach (CurrencyInfo currency in Currencies.SupportedCurrencies)
								{
									<option value="@currency.AlphaCode">@currency.Name (@currency.AlphaCode)</option>
								}
							</InputSelect>
						</div>

						<button type="submit" class="btn btn-primary">Save</button>
						<button type="button" class="btn btn-danger" @onclick="OnCancel">Cancel</button>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
}

@code {

	private void UpdateCurrency(string newCurrency)
	{
		Snowflake.CurrencyCode = newCurrency;
	}

	private void UpdateCurrency(ChangeEventArgs e)
	{
		Snowflake.CurrencyCode = e.Value.ToString();
	}

	[Parameter]
	public SnowflakeDto Snowflake { get; set; }

	[Parameter]
	public EventCallback<SnowflakeDto> OnSave { get; set; }

	[Parameter]
	public EventCallback OnCancel { get; set; }

	private async Task SubmitSnowflakeForm()
	{
		await OnSave.InvokeAsync(Snowflake);
	}

	private void UpdateCurrencyCode(string newCurrencyCode)
	{
		Snowflake.CurrencyCode = newCurrencyCode;
	}

}