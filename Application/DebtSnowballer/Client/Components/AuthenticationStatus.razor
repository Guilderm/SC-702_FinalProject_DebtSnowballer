@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
	<Authorized >
		<nav class="navbar navbar-expand-lg navbar-light bg-light">
			<div class="container-fluid">
				<span aria-hidden="true">
					Hello,
					@if (context.User.Identity != null)
					{@context.User.Identity.Name}!
				</span>

				<ul class="navbar-nav">
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
							<img src="@context.User.FindFirst(c => c.Type == "picture")?.Value" alt="User Profile Image" class="rounded-circle" width="30" height="30">
						</a>
						<ul class="dropdown-menu" aria-labelledby="navbarDropdown">
							<span class="oi oi-person" aria-hidden="true"></span> Profile
							<NavLink class="nav-link" href="#" @onclick="BeginSignOut">
								<span class="oi oi-account-logout" aria-hidden="true"></span> Log out
							</NavLink>
						</ul>
					</li>
				</ul>
			</div>
		</nav>
	</Authorized>
	
	<NotAuthorized>
		<h4>
			<NavLink class="nav-link" href="authentication/login">
				<span class="oi oi-account-login" aria-hidden="true"></span> Log in
			</NavLink>
		</h4>
	</NotAuthorized>
</AuthorizeView>


@code {
	private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}