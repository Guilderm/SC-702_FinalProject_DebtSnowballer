@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using DebtSnowballer.Client.ClientSideServices
@inject LazyAssemblyLoader LazyAssemblyLoader

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserProfileService UserProfileService

<CascadingAuthenticationState>
	<Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@_lazyLoadedAssemblies">
		<Found Context="routeData">
			<AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
				<Authorizing>
					<p>Determining session state, please wait...</p>
				</Authorizing>
				<NotAuthorized>
					<h1>Sorry</h1>
					<p>You're not authorized to reach this page. You need to <a href="/authentication/login">log in.</a></p>
				</NotAuthorized>
			</AuthorizeRouteView>
			<FocusOnNavigate RouteData="@routeData" Selector="h1"/>
		</Found>
		<NotFound>
			<PageTitle>Not found</PageTitle>
			<LayoutView Layout="@typeof(MainLayout)">
				<p role="alert">Sorry, there's nothing at this address.</p>
			</LayoutView>
		</NotFound>
	</Router>
</CascadingAuthenticationState>

@code {
	private readonly List<Assembly> _lazyLoadedAssemblies = new();

	private AuthenticationState _authState;

	protected override async Task OnInitializedAsync()
	{
		_authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		await UserProfileService.CreateUpdateUserProfile(_authState.User);
	}

}