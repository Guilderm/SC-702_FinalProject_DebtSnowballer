@using DebtSnowballer.Shared.DTOs
@if (Debt != null)
{
	<div class="modal" style="display: block">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">@(Debt.Id == 0 ? "Add A Loan" : "Edit: ") @Debt.LoanNickName</h5>
					<button type="button" class="btn-close" @onclick="OnCancel"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="@Debt" OnValidSubmit="HandleValidSubmit">
						<DataAnnotationsValidator/>
						<ValidationSummary/>

						<div class="form-group">
							<label for="LoanNickName">Loan NickName</label>
							<InputText id="LoanNickName" @bind-Value="Debt.LoanNickName" class="form-control" placeholder="Loan NickName"/>
						</div>

						<div class="form-group">
							<label for="RemainingPrincipal">Remaining Principal</label>
							<InputNumber id="RemainingPrincipal" @bind-Value="Debt.RemainingPrincipal" class="form-control" placeholder="Remaining Principal"/>
						</div>

						<div class="form-group">
							<label for="interestRate">Interest Rate</label>
							<InputNumber id="interestRate" @bind-Value="Debt.InterestRate" class="form-control" placeholder="Interest Rate"/>
						</div>

						<div class="form-group">
							<label for="fees">Fees</label>
							<InputNumber id="fees" @bind-Value="Debt.Fees" class="form-control" placeholder="Fees"/>
						</div>

						<div class="form-group">
							<label for="monthlyPayment">Monthly Payment</label>
							<InputNumber id="monthlyPayment" @bind-Value="Debt.MonthlyPayment" class="form-control" placeholder="Monthly Payment"/>
						</div>

						<div class="form-group">
							<label for="remainingTerm">Remaining Term In Months</label>
							<InputNumber id="remainingTerm" @bind-Value="Debt.RemainingTermInMonths" class="form-control" placeholder="Remaining Term"/>
						</div>

						<div class="form-group">
							<label for="currency">Currency</label>
							<CurrencySelector UserCurrency="@Debt.CurrencyCode" />
						</div>
						
						<button type="submit" class="btn btn-primary">Save</button>
						<button type="button" class="btn btn-danger" @onclick="OnCancel">Cancel</button>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
}

@code {

	[Parameter]
	public DebtDto Debt { get; set; }

	[Parameter]
	public EventCallback<DebtDto> OnSave { get; set; }

	[Parameter]
	public EventCallback OnCancel { get; set; }

	private async Task HandleValidSubmit()
	{
		await OnSave.InvokeAsync(Debt);
	}

	private void UpdateCurrencyCode(string newCurrencyCode)
	{
		Debt.CurrencyCode = newCurrencyCode;
	}
}