@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.ClientSideServices
@inject ISnowflakeService SnowflakeService

<h3>
	<br>
</h3>

<h3>List all your Snowflakes</h3>
<br>

@if (SnowflakesInQuoteCurrency == null)
{
	<p>
		<em>Loading your Snowflakes...</em>
		<MudProgressLinear Color="Color.Primary" Striped="true" Size="Size.Large" Value="75" Class="my-7"/>
	</p>
}
else
{
}
	<SnowflakeTable Snowflakes="SnowflakesInQuoteCurrency" GetCurrencySymbol="GetCurrencySymbol" LoadSnowflakesInQuoteCurrency="LoadSnowflakesInQuoteCurrency" CalculateData="CalculateData" IsReadOnly="false"/>

	<h3>
		<br> <br>
	</h3>

	<h3>Debts converted to base currency</h3>
	<br>
	<SnowflakeTable Snowflakes="SnowflakesInBaseCurrency" GetCurrencySymbol="GetCurrencySymbol" LoadSnowflakesInQuoteCurrency="LoadSnowflakesInQuoteCurrency" CalculateData="CalculateData" IsReadOnly="true"/>


@code {

	[Parameter]
	public List<SnowflakeDto> SnowflakesInQuoteCurrency { get; set; }

	[Parameter]
	public List<SnowflakeDto> SnowflakesInBaseCurrency { get; set; }

	[Parameter]
	public Func<string, string> GetCurrencySymbol { get; set; }

	[Parameter]
	public Func<Task> LoadSnowflakesInQuoteCurrency { get; set; }

	[Parameter]
	public Func<Task> CalculateData { get; set; }

}