@using DebtSnowballer.Shared.DTOs
@inject IJSRuntime JSRuntime

<div class="modal fade" id="debtFormModal" tabindex="-1" role="dialog" aria-labelledby="debtFormModalLabel" aria-hidden="true">

		<div class="modal-content">
			<div class="modal-header text-center">
				<h4 class="modal-title w-100 font-weight-bold">@(DebtItem.Id == 0 ? "Add Loan" : "Edit Loan")</h4>
			<button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" @onclick="CancelEdit">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<EditForm Model="DebtItem" OnValidSubmit="SaveLoanItem" @key="DebtItem">
					<DataAnnotationsValidator/>
					<ValidationSummary/>
					<div class="md-form mb-5">
						<i class="fas fa-tag prefix grey-text"></i>
						<InputText id="LoanNickName" class="form-control validate" @bind-Value="DebtItem.LoanNickName"/>
						<label data-error="wrong" data-success="right" for="LoanNickName">Loan Nickname</label>
					</div>
					<div class="md-form mb-5">
						<i class="fas fa-dollar-sign prefix grey-text"></i>
						<InputNumber id="Principal" class="form-control validate" @bind-Value="DebtItem.RemainingPrincipal"/>
						<label data-error="wrong" data-success="right" for="Principal">Principal</label>
					</div>

					<div class="md-form mb-5">
						<i class="fas fa-percent prefix grey-text"></i>
						<InputNumber id="InterestRate" class="form-control validate" @bind-Value="DebtItem.InterestRate"/>
						<label data-error="wrong" data-success="right" for="InterestRate">Interest Rate</label>
					</div>

					<div class="md-form mb-5">
						<i class="fas fa-dollar-sign prefix grey-text"></i>
						<InputNumber id="Fees" class="form-control validate" @bind-Value="DebtItem.Fees"/>
						<label data-error="wrong" data-success="right" for="Fees">Fees</label>
					</div>

					<div class="md-form mb-5">
						<i class="fas fa-dollar-sign prefix grey-text"></i>
						<InputNumber id="MonthlyPayment" class="form-control validate" @bind-Value="DebtItem.MonthlyPayment"/>
						<label data-error="wrong" data-success="right" for="MonthlyPayment">Monthly Payment</label>
					</div>

					<div class="md-form mb-5">
						<i class="fas fa-calendar-day prefix grey-text"></i>
						<InputNumber id="RemainingTerm" class="form-control validate" @bind-Value="DebtItem.RemainingTerm"/>
						<label data-error="wrong" data-success="right" for="RemainingTerm">Remaining Term</label>
					</div>

					<div class="md-form mb-5">
						<i class="fas fa-money-bill-wave prefix grey-text"></i>
						<InputText id="CurrencyCode" class="form-control validate" @bind-Value="DebtItem.CurrencyCode"/>
						<label data-error="wrong" data-success="right" for="CurrencyCode">Currency Code</label>
					</div>
				</EditForm>
			</div>
			<div class="modal-footer d-flex justify-content-center">
				<button type="submit" class="btn btn-success">@(DebtItem.Id == 0 ? "Add" : "Update")</button>
				<button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="CancelEdit">Cancel</button>
			</div>
		</div>
	</div>


@code {
	[Parameter]
	public DebtDto DebtItem { get; set; }

	[Parameter]
	public EventCallback<DebtDto> OnSave { get; set; }

	[Parameter]
	public EventCallback OnCancel { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JSRuntime.InvokeVoidAsync("bootstrap.Modal", "debtFormModal");
		}
	}

	private async Task SaveLoanItem()
	{
		await OnSave.InvokeAsync(DebtItem);
		await JSRuntime.InvokeVoidAsync("bootstrap.Modal.hide", "debtFormModal");
	}

	private async Task CancelEdit()
	{
		await OnCancel.InvokeAsync();
		await JSRuntime.InvokeVoidAsync("bootstrap.Modal.hide", "debtFormModal");
	}
}