@using DebtSnowballer.Shared.DTOs
@using DebtSnowballer.Client.ClientSideServices
@inject ISnowflakeService SnowflakeService

<h3>
	<br>
</h3>

<h3>List all your Snowflakes</h3>
<br>

@if (SnowflakesInQuoteCurrency == null)
{
	<p>
		<em>Loading your Snowflakes...</em>
	</p>
}
else
{
	<SnowflakeTable Snowflakes="SnowflakesInQuoteCurrency" GetCurrencySymbol="GetCurrencySymbol" OnEditSnowflake="EditSnowflake" OnDeleteSnowflake="DeleteSnowflake" AreActionsShown="true"/>
	<button class="btn btn-success" @onclick="OnAddNewSnowflake">Add New Snowflake</button>

	<h3>
		<br>
	</h3>

	<h3>Snowflakes converted to base currency</h3>
	<br>
	<SnowflakeTable Snowflakes="SnowflakesInBaseCurrency" GetCurrencySymbol="GetCurrencySymbol" OnEditSnowflake="EditSnowflake" OnDeleteSnowflake="DeleteSnowflake" AreActionsShown="false"/>

	<SnowflakeForm PlannedSnowflake="SelectedPlannedSnowflake" OnSave="OnSave" OnCancel="OnCancel"/>
}


@code {

	private PlannedSnowflakeDto _newPlannedSnowflake = new();
	private PlannedSnowflakeDto SelectedPlannedSnowflake { get; set; }

	[Parameter]
	public List<PlannedSnowflakeDto> SnowflakesInQuoteCurrency { get; set; }

	[Parameter]
	public List<PlannedSnowflakeDto> SnowflakesInBaseCurrency { get; set; }

	[Parameter]
	public Func<string, string> GetCurrencySymbol { get; set; }

	[Parameter]
	public Func<Task> LoadSnowflakesInQuoteCurrency { get; set; }


	private async Task EditSnowflake(int id)
	{
		SelectedPlannedSnowflake = await SnowflakeService.GetSnowflakeById(id);
	}

	private void OnAddNewSnowflake()
	{
		SelectedPlannedSnowflake = new PlannedSnowflakeDto();
	}

	private async Task OnSave(PlannedSnowflakeDto plannedSnowflake)
	{
		if (plannedSnowflake.Id == 0)
		{
			await SnowflakeService.AddSnowflake(plannedSnowflake);
		}
		else
		{
			await SnowflakeService.UpdateSnowflake(plannedSnowflake);
		}
		await LoadSnowflakesInQuoteCurrency();
		SelectedPlannedSnowflake = null;
		StateHasChanged();
	}

	private void OnCancel()
	{
		SelectedPlannedSnowflake = null;
	}

	private async Task DeleteSnowflake(int id)
	{
		await SnowflakeService.DeleteSnowflake(id);
		await LoadSnowflakesInQuoteCurrency();
	}

}