@page "/profile"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<h3>User Profile </h3>
<br>

@if (user == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div>
		@if (user.HasClaim(c => c.Type == "picture"))
		{
			<h4>Picture:</h4>
			<img src="@user.FindFirst(c => c.Type == "picture").Value" alt="Profile picture" />
		}

		@if (user.HasClaim(c => c.Type == "name"))
		{
			<h4>Name:</h4>
			<p>@user.FindFirst(c => c.Type == "name").Value</p>
		}
		<br><br>
		@if (user.HasClaim(c => c.Type == ClaimTypes.Email))
		{
			<h4>Email:</h4>
			<p>@user.FindFirst(c => c.Type == ClaimTypes.Email).Value</p>
		}
		<br><br>
		<h4>Claims:</h4>
		@foreach (var claim in user.Claims)
		{
			<p>@claim.Type: @claim.Value</p>
		}
	</div>
}

@code {
	private ClaimsPrincipal user;

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		user = authState.User;
	}
}